//_button.scss
//
// Button classes & styling with reference to palette.
// ==========================================================================

.btn {
	display: inline-flex;
	justify-content: center;
	position: relative;
	padding: $button-padding-medium;
	background: transparent;
	cursor: pointer;
	border: 1px solid rgba(0, 0, 0, 0.12);
	outline: none;
	border-radius: 3px;
	font-size: $button-font-size;
	text-transform: uppercase;
	transition: border 0.1s cubic-bezier(0.4, 0, 1, 1);
	height: auto;
	font-weight: $button-font-weight;
	user-select: none;

	&:hover,
	&:focus {
		border: 1px solid rgba(0, 0, 0, 0.25);
	}

	&:active {
		border: 1px solid rgba(0, 0, 0, 0.55);
	}
}

// Colored Buttons
// ==========================================================================

%button-properties {
	border: 0;
	color: #ffffff;
	transition: box-shadow 0.2s cubic-bezier(0.4, 0, 1, 1);

	&:hover,
	&:focus,
	&:active {
		border: 0;
	}
}

@if $button-enable-colored {
	@each $color-name, $hex in $palette {
		.btn-#{$color-name} {
			@extend %button-properties;
		}

		.btn-#{$color-name} {
			@include buttons-colored($hex);
		}
	}

	//Simple Button
	.btn-simple {
		background-color: transparent;
		box-shadow: none;
		border: 0;

		&:focus,
		&:hover {
			border: 0;
		}
	}
}

// Outlined Buttons
// ==========================================================================

@if $button-enable-outline {
	@each $color-name, $hex in $palette {
		.btn-#{$color-name}.btn-outline {
			@include buttons-outline($hex);
		}
	}

	//Common button outline props
	.btn-outline {
		box-shadow: none;
		background-color: transparent;
		transition: color, background-color 0.1s cubic-bezier(0.4, 0, 1, 1);

		&:hover,
		&:focus,
		&:active {
			box-shadow: none;
		}

		&:disabled {
			background-color: transparent !important;
			border: 1px solid rgba(0, 0, 0, 0.12);
			color: rgba(0, 0, 0, 0.12) !important;

			&:hover {
				color: rgba(0, 0, 0, 0.12) !important;
			}
		}
	}
}

// Disabled Buttons

@if $button-enable-disabled {
	.btn:disabled {
		box-shadow: none;
		cursor: default;

		&:hover {
			box-shadow: none;
			cursor: default;
		}

		&:after {
			display: none;
		}
	}

	@each $color-name, $hex in $palette {
		.btn-#{$color-name}:disabled {
			background-color: rgba($hex, 0.5);
		}
	}
}

// Button Sizes
// ==========================================================================

@if $button-enable-sizes {
	.btn-small {
		padding: $button-padding-small;
		font-size: $button-font-size - 1px;
	}

	.btn-large {
		padding: $button-padding-large;
		font-size: $button-font-size + 2px;
	}
}

// Rounded Buttons
// ==========================================================================

@if $button-enable-rounded {
	.btn-rounded {
		border-radius: 500px;
		padding: $button-padding-round;
	}
}

// Icon Buttons
// ==========================================================================

@if $button-enable-icons {
	.btn-icon {
		display: inline-flex;
		align-items: center;
		justify-content: center;
		white-space: nowrap;

		i:first-child:not(:last-child) {
			margin-left: 0;
			margin-right: 3px;
		}

		i:last-child:not(:first-child) {
			margin-left: 3px;
			margin-right: 0;
		}

		&.btn-large {
			i {
				font-size: 1.2rem;
			}
		}
	}

	//Just icon classes
	.btn-justicon {
		padding: 0;
		height: 45px;
		min-width: 45px;
		width: 45px;

		&.btn-large {
			width: 56px;
			height: 56px;
			min-width: 56px;

			i {
				font-size: 1.3rem;
				line-height: 56px;
			}
		}
	}
}

// Loading Button
// ==========================================================================

@if $button-enable-loading {
	.btn-loading {
		$self: &;
		transition: none;
		pointer-events: none;
		color: transparent !important;

		&:after {
			content: '';
			width: 18px;
			height: 18px;
			border: 2px solid rgba(0, 0, 0, 0.5);
			border-right-color: transparent !important;
			border-radius: 50%;
			display: inline-block;
			animation-duration: 0.75s;
			animation-iteration-count: infinite;
			animation-name: spinner;
			animation-timing-function: linear;
			position: absolute;
			top: 50%;
			left: 50%;
			margin-left: -9px;
			margin-top: -9px;
		}

		&.btn-small {
			&:after {
				width: 14px;
				height: 14px;
				border-width: 1.5px;
				margin-left: -7px;
				margin-top: -7px;
			}
		}

		&.btn-large {
			&:after {
				width: 26px;
				height: 26px;
				border-width: 3px;
				margin-left: -13px;
				margin-top: -13px;
			}
		}

		@keyframes spinner {
			0% {
				transform: rotate(0deg);
			}
			100% {
				transform: rotate(360deg);
			}
		}

		&:hover {
			box-shadow: none;
		}
	}

	//All coloured buttons to have white spinner
	%white-spinner {
		border-color: #ffffff;
	}

	@each $color-name, $hex in $palette {
		@if (to-lower-case(inspect($hex)) != '#ffffff' and to-lower-case(inspect($hex)) != '#000000') {
			// sass-lint:disable-line hex-notation
			.btn-#{$color-name}:after {
				@extend %white-spinner;
			}
		}
	}
}

// Block Button
// ==========================================================================

@if $button-enable-block {
	.btn-block {
		display: block;
		width: 100%;

		+ .btn-block {
			margin-top: 10px;
		}
	}
}
