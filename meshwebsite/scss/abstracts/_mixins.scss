// -----------------------------------------------------------------------------
// _mixins.scss
// This file contains all mixin's for use with scss files.
// -----------------------------------------------------------------------------
// sass-lint:disable no-duplicate-properties
// sass-lint:disable no-vendor-prefixes

// Breakpoint Mixins
// ==========================================================================

/// @author Ainsley Clark
/// Returns mediaquery based on breakpoint set in _variables.scss
@mixin media-mob {
	@media (min-width: #{$grid-breakpoint-mob}) {
		@content;
	}
}

@mixin media-tab {
	@media (min-width: #{$grid-breakpoint-tab}) {
		@content;
	}
}

@mixin media-desk {
	@media (min-width: #{$grid-breakpoint-desk}) {
		@content;
	}
}

@mixin media-hd {
	@media (min-width: #{$grid-breakpoint-hd}) {
		@content;
	}
}

// Pixel to REM Converter
// ==========================================================================

/// @author Ainsley Clark
/// @param {Number} $pxValue - Pixel amount to convert
/// @param {String} $property [font-size] - Property to convert
/// @param {Number} $standard-size - Initial base rem size
@mixin px-to-rem($pxValue, $property: 'font-size', $standard-size: 16) {
	#{$property}: $pxValue + px;
	#{$property}: $pxValue / $standard-size + rem;
}

// Event Wrapper
// ==========================================================================

/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
	@if $self {
		&,
		&:hover,
		&:active,
		&:focus {
			@content;
		}
	} @else {
		&:hover,
		&:active,
		&:focus {
			@content;
		}
	}
}

// Background Opacity
// ==========================================================================

/// @author Ainsley Clark
/// @param {Color} $color - Hex code for opacity
/// @param {Opacity} $opacity [0.3] - Opaque amount
@mixin background-opacity($color, $opacity: 0.3) {
	background: $color; /* The Fallback */
	background: rgba($color, $opacity);
}

// Background Gradient
// ==========================================================================

/// @author Ainsley Clark
/// @param {String} $start-color - Color to Start
/// @param {String} $start-color - Color to End
/// @param {String} $oreintation - 'vertical' or 'horizontal' (up or down)
@mixin background-gradient($start-color, $end-color, $orientation) {
	background: $start-color;

	@if $orientation == 'vertical' {
		background: -webkit-linear-gradient(top, $start-color, $end-color);
		background: linear-gradient(to bottom, $start-color, $end-color);
	} @else if $orientation == 'horizontal' {
		background: -webkit-linear-gradient(left, $start-color, $end-color);
		background: linear-gradient(to right, $start-color, $end-color);
	} @else {
		background: -webkit-radial-gradient(center, ellipse cover, $start-color, $end-color);
		background: radial-gradient(ellipse at center, $start-color, $end-color);
	}
}
//Usage:
//$start-color, $end-color, $orientation - vertical/horizontal/radial
//  .foo {
//     @include background-gradient(red, black, 'vertical');
//   }
